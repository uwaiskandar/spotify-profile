import { useState, useEffect, useRef } from 'react'
import Head from 'next/head'

import styles from '../styles/Profile.module.css'
import TopCard2 from '../components/TopCard2'
import TopList from '../components/List'
import TopBanner from '../components/TopBanner'
import Title from '../components/Title'
import ProfileCard from '../components/ProfileCard'
import FilterTime from '../components/FilterTime'
import { getProfile } from '../api/profile'
import { getTopItems } from '../api/topItems'
import TopGenre from '../components/TopGenre'

import { topArtist } from '../datas/topArtists'
import { topSong } from '../datas/topSongs'
import { getGenreFromArtists } from '../libs/dataHelper'
import { TIME_RANGE } from '../libs/constants'

export default function Profile() {
  let [ topArtistRange, setTopArtistRange ] = useState('long_term')
  let [ topSongRange, setTopSongRange ] = useState('long_term')
  let [ topArtists = {}, setTopArtists ] = useState({})
  let [ topSongs = {}, setTopSongs ] = useState({})
  let [ topGenres = {}, setTopGenres ] = useState({})
  let [ profile, setProfile ] = useState({})
  let [ loadingState, setLoadingState] = useState(true)

  const getData = async () => {
    // get profile
    const profileData = await getProfile()
    setProfile(profileData)

    // get all time rang
    let data = {
      songs: [],
      artists: [],
      genres: []
    }
    for(let { value: time } of TIME_RANGE) {
      // get top tracks
      const topTrackDatas = await getTopItems({
        type: 'tracks',
        timeRange: time
      })
      data.songs[time] = topTrackDatas.items

      const topArtistDatas = await getTopItems({
        type: 'artists',
        timeRange: time
      })
      data.artists[time] = topArtistDatas.items
      data.genres[time] = getGenreFromArtists(topArtistDatas.items)
    }
    setTopSongs(data.songs)
    setTopArtists(data.artists)
    setTopGenres(data.genres)
    setLoadingState(false)
  };

  const handleTimeArtists = (value) => {
    setTopArtistRange(value)
  }
  const handleTimeSongs = (value) => {
    setTopSongRange(value)
  }

  useEffect(() => {
    getData()
  }, [])

  return (
    // login to spotify
    <div className={`${styles.container} bg-gray-900`}>
      <Head>
        <title>Spotify Top 10</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`max-w-xl mx-auto w-screen ${styles.main}`}>
        <TopBanner
          imgUrl={"/bg/banner-fav.jpg"}
          content={"Your Spotify<br/>Favorites."}
          textOrientation={'text-right'}
        />
        <ProfileCard 
          imgUrl={profile.images ? profile.images[0].url : ''}
          name={profile.display_name}
          followers={profile.followers ? profile.followers.total : '0'}
          loadingState={loadingState}
        /> 
        <div id="topArtists">
          <Title
            title="Top Artists"
          />
          <div className='px-10 py-2'>
            <div className='pt-7'>
              {
                <TopCard2
                name={ topArtists[topArtistRange] ? topArtists[topArtistRange][0].name : null} 
                idx="1" 
                imgSrc={ topArtists[topArtistRange] ? topArtists[topArtistRange][0].images[1].url : null}
                isTop={true}
                width={'250rem'}
                follower={ topArtists[topArtistRange] ? topArtists[topArtistRange][0].followers.total : null}
                loadingState={loadingState}
                />
              }
            </div>
          </div>
          <FilterTime
            selectedValue={topArtistRange}
            onChangeTime={handleTimeArtists}
          />
          <div className='pb-10 px-5 pt-5'>
            {/* table */}
            <TopList 
              items={ topArtists[topArtistRange] ? topArtists[topArtistRange].filter((el, idx) => idx > 0) : []}
              isArtists={true}
              startIdx={2}
              loadingState={loadingState}
            />
          </div>
        </div>
        <div id="topSongs">
          <Title
            title="Top Songs"
            bgColor={'bg-gradient-to-r from-purple-500 to-cyan-500'}
          />
          <div className='px-10 py-2'>
            <div className='pt-7'>
              {
                <TopCard2
                name={topSongs[topSongRange] ? topSongs[topSongRange][0].name : null} 
                idx="1" 
                imgSrc={topSongs[topSongRange] ? topSongs[topSongRange][0].album.images[1].url : null}
                isTop={true}
                width={'250rem'}
                artists={topSongs[topSongRange] ? topSongs[topSongRange][0].artists : null}
                isSongs={true}
                loadingState={loadingState}
                />
              }
            </div>
          </div>
          <FilterTime
            selectedValue={topSongRange}
            onChangeTime={handleTimeSongs}
          />
          <div className='pb-10 px-5 pt-5'>
            {/* table */}
            {
              <TopList 
                items={
                  topSongs[topSongRange] ? topSongs[topSongRange].filter((item, idx) => idx > 0)
                  : []
                }
                startIdx={2}
                isArtists={false}
                loadingState={loadingState}
              />
            }
          </div>
        </div>
        <div className='w-full' id="topGenres">
          <TopGenre
            imgUrl={"/bg/banner-genres.jpg"}
            textOrientation={'text-left'}
            genres={topGenres[topArtistRange]}
          />
        </div>
      </main>
    </div>
  )
}