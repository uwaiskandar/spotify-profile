import Head from 'next/head'
import Image from 'next/image'
import { useState, useEffect, useRef } from 'react'
// import { useSelector, useDispatch } from 'react-redux'

import styles from '../styles/Home.module.css'
// import { authLogin } from '../redux/auth'
import { authLogin } from '../api/auth'
import { getRedirectUrl, userScopes } from '../api/auth'

function useInterval(callback, delay) {
  const savedCallback = useRef();

  // Remember the latest callback.
  useEffect(() => {
    savedCallback.current = callback;
  }, [callback]);

  // Set up the interval.
  useEffect(() => {
    function tick() {
      savedCallback.current();
    }
    if (delay !== null) {
      let id = setInterval(tick, delay);
      return () => clearInterval(id);
    }
  }, [delay]);
}

export default function Home() {
  // const dispatch = useDispatch()
  let bannerImage = [
    '/bg/banner-music-1.jpg',
    '/bg/banner-music-2.jpg',
    '/bg/banner-music-3.jpg',
    '/bg/banner-music-4.jpg',
    '/bg/banner-music-5.jpg',
    '/bg/banner-music-5.jpg',
  ]
  let [currentBanner, setBanner] = useState({
    value: bannerImage[0],
  })
  let [count = 1, setCount] = useState(null)

  useInterval(() => {
    setBanner(bannerImage[count] ?? bannerImage[0])
    setCount(count+1)
    if (count === bannerImage.length) {
      setCount(0)
    }
    console.log('currentBanner', currentBanner)
  }, 4000);

  const handleLogin = (event) => {
    let clientID = process.env.NEXT_PUBLIC_SPOTIFY_CLIENTID ?? ''
    let redirectUrl = process.env.NEXT_PUBLIC_URL ?? 'http://localhost:3000'
    // dispatch(authLogin())
    event.preventDefault()

    console.log('clientID', clientID)
    const redirectUri = getRedirectUrl(
      {
        clientID,
        scopes: userScopes,
        redirectUrl,
      }
    )

    if (window.location !== window.parent.location) {
      const loginWindow = window.open(redirectUri)
      window.addEventListener('message', (event) => {
        if (event.data.type !== 'react-spotify-auth' || !event.data.accessToken) {
          return
        }

        loginWindow.close()
        this.props.onAccessToken(event.data.accessToken)
      }, false)
    } else {
      window.location = redirectUri
    }
  }


  return (
    // login to spotify
    <div className={styles.container}>
      <Head>
        <title>Spotify Profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={
        {
          backgroundImage: `url(${currentBanner})`,
          transition: 'background-image 1s linear',
        }
      } className={`${styles.banner} min-w-full min-h-full brightness-75`} id="banner">

      </div>
      <main className={`${styles.main}`}>
        <h1 className="font-bold text-5xl text-white">
          Your Spotify TOP 10
        </h1>

        <p className="py-10 text-base px-5 text-white">
          Lorem Ipsum is simply dummy text of the printing and typesetting industry.
        </p>

        <button className='px-10 py-4 bg-spotify rounded-full font-semibold hover:shadow-cyan-500/50 shadow-xl hover:brightness-110'
          onClick={(event) => handleLogin(event)}>
          <img src=""></img>
          Log in with Spotify
        </button>

        {/* <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div> */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
